local sandbox="${SANDBOX_NAME}"
local sandbox_details="${SANDBOX_DETAILS}"
local sandbox_virtual_env=false

# In case a virtualenv is active, parse it, and use it for the sandbox
# settings.
if [ -n "${VIRTUAL_ENV}" ]
then
    sandbox=`basename "${VIRTUAL_ENV}"`
    sandbox_virtual_env=true
fi

# In case a sandbox is set, output sandbox information.
if [ ! -z $sandbox ]
then
    # Use a different color for the sandbox name depending on whether we are in
    # a virtualenv or a C++ sandbox.
    if [ ${sandbox_virtual_env} = true ]
    then
        sandbox_name_color="208"
    else
        sandbox_name_color="12"
    fi

    local sandbox_prompt=$(printf "%%F{%s}%s%%b%%F{15}" "$sandbox_name_color" "$sandbox")
    if [ ! -z $sandbox_details ]
    then
        sandbox_prompt+=$(printf "|%%B%%F{208}%s" "$sandbox_details")
    fi

    if [ ${sandbox_virtual_env} = true ]
    then
        printf "%%B(%s%%F{255})" "$sandbox_prompt"
    else
        printf "%%B[%s%%F{255}]" "$sandbox_prompt"
    fi
fi
